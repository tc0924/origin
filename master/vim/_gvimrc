" ウィンドウの縦幅
set lines=55
" ウィンドウの横幅
set columns=180
" カラースキーム
colorscheme iceberg
" ダーク系のカラースキームを使う
set background=dark
" フォント設定
"set guifont=Ricty:h9
"set guifontwide=Ricty:h9
"set guifont=源真ゴシック等幅_Normal:h10
set guifont=Cica:h11
"set guifont="MS Gothic":h8

" DirectX
set renderoptions=type:directx,renmode:5
set antialias

" ツールバーを非表示
set guioptions-=T

" GVimを半透明にする
autocmd FocusGained * set transparency=240
autocmd FocusLost * set transparency=128

" タブ設定
set tabstop=4
set expandtab

set expandtab " タブ入力を複数の空白入力に置き換える
set tabstop=4 " 画面上でタブ文字が占める幅
set softtabstop=4 " 連続した空白に対してタブキーやバックスペースキーでカーソルが動く幅
set autoindent " 改行時に前の行のインデントを継続する
set smartindent " 改行時に前の行の構文をチェックし次の行のインデントを増減する
set shiftwidth=4 " smartindentで増減する幅

" 文字列検索
set incsearch " インクリメンタルサーチ. １文字入力毎に検索を行う
set ignorecase " 検索パターンに大文字小文字を区別しない
set smartcase " 検索パターンに大文字を含んでいたら大文字小文字を区別する
set hlsearch " 検索結果をハイライト

set whichwrap=b,s,h,l,<,>,[,],~ " カーソルの左右移動で行末から次の行の行頭への移動が可能になる
set number " 行番号を表示
set cursorline " カーソルラインをハイライト

" 行が折り返し表示されていた場合、行単位ではなく表示行単位でカーソルを移動する
nnoremap j gj
nnoremap k gk
nnoremap <down> gj
nnoremap <up> gk

" バックスペースキーの有効化
set backspace=indent,eol,start

set showmatch " 括弧の対応関係を一瞬表示する
source $VIMRUNTIME/macros/matchit.vim " Vimの「%」を拡張する

set wildmenu " コマンドモードの補完
set history=5000 " 保存するコマンド履歴の数

" ルーラーを表示
set ruler

" ヤンク,カット操作によるクリップボードの操作
set clipboard=unnamed,autoselect

" ESCキーをCtrl+Jにマッピング
imap <c-j> <esc>
inoremap <silent> jj <ESC>
inoremap <silent> っj <ESC>

" GUIパーツの非表示化
if has('gui')
  set guioptions-=T
  set guioptions-=m
  set guioptions-=r
  set guioptions-=R
  set guioptions-=l
  set guioptions-=L
  set guioptions-=b
endif

if has("win32")
    " Windows環境用のコード
    let Grep_Path = 'C:\Git\usr\bin\grep.exe' 
    let Grep_Xargs_Path = 'C:\Git\usr\bin\xargs.exe' 
    let Grep_Find_Path = 'C:\Git\usr\bin\find.exe'
    let Grep_Shell_Quote_Char = '"'
    
endif



"---------------------------
" Start Neobundle Settings.
"---------------------------
" bundleで管理するディレクトリを指定
if has('vim_starting')
  set runtimepath+=$VIM/.vim/bundle/neobundle.vim/
  " Required:
  call neobundle#begin(expand('$VIM/.vim/bundle/'))
endif
" neobundle自体をneobundleで管理
NeoBundleFetch 'Shougo/neobundle.vim'
" 以下は必要に応じて追加
NeoBundle 'Shougo/unite.vim'
NeoBundle 'Shougo/neomru.vim'
NeoBundle 'itchyny/lightline.vim'
NeoBundle 'vim-scripts/grep.vim'
call neobundle#end()
" Required:
filetype plugin indent on
" vim起動時に未インストールのプラグインをインストールする
NeoBundleCheck

